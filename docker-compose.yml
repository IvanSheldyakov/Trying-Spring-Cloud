version: '3.8'

services:
  config-server:
    build: ./ConfigurationServer
    ports:
      - "8071:8071"
    environment:
      ENCRYPT_KEY: secretKey
      SPRING_PROFILES_ACTIVE: native
    networks:
      backend:
        aliases:
          - "config-server"

  licensing-service:
    build: ./LicensingService
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CLOUD_CONFIG_URI: http://config-server:8071
    depends_on:
      licensing-service-db:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
           - "licensing-service"

  organization-service:
    build: ./OrganizationService
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CLOUD_CONFIG_URI: http://config-server:8071
    depends_on:
      organization-service-db:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "organization-service"

  eureka-server:
    build: ./EurekaServer
    ports:
      - "8070:8070"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8071
    networks:
      backend:
        aliases:
          - "eureka-server"

  gateway-server:
    build: ./GatewayServer
    ports:
      - "8083:8083"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8071
    depends_on:
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway-server"

  organization-service-db:
    image: postgres:latest
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: organization-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - organization-service-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      backend:
        aliases:
          - "organization-service-db"

  licensing-service-db:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: licensing-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - licensing-service-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      backend:
        aliases:
          - "licensing-service-db"

networks:
  backend:
    driver: bridge

volumes:
  licensing-service-data:
  organization-service-data: